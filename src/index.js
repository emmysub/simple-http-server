// Generated by CoffeeScript 1.6.3
(function() {
  var async, fs, http, join, mime, server, url;

  fs = require('fs');

  url = require('url');

  join = require('path').join;

  http = require('http');

  mime = require('mime');

  async = require('async');

  server = http.createServer(function(request, response) {
    var dirname, path, pathname;
    pathname = url.parse(request.url).pathname;
    dirname = './';
    path = join(dirname, pathname);
    return fs.stat(path, function(err, stats) {
      var type;
      if (err) {
        response.writeHead(404);
        response.write('<h1>404 - Not Found</h1>');
        response.end();
        return;
      }
      if (stats.isFile()) {
        type = mime.lookup(path);
        response.writeHead(200, {
          'content-type': type
        });
        fs.createReadStream(path).pipe(response);
      }
      if (stats.isDirectory()) {
        return fs.readdir(path, function(err, files) {
          var types;
          if (err) {
            return console.log('internal server error?');
          }
          types = {};
          return async.eachLimit(files, 10, function(file, done) {
            file = join(path, file);
            return fs.stat(file, function(err, stats) {
              if (err) {
                return done(err);
              }
              types[file] = stats.isDirectory();
              return done();
            });
          }, function() {
            response.writeHead(200, 'content-type: text/html');
            response.write("<h1>Directory " + path + "</h1>");
            files.forEach(function(name) {
              var dir, file;
              file = join(path, name);
              dir = types[file] ? '/' : '';
              return response.write("<li><a href=\"/" + file + "\">" + name + dir + "</a></li>");
            });
            return response.end();
          });
        });
      }
    });
  });

  module.exports = server;

}).call(this);
